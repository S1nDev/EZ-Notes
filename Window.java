import java.awt.Font;
import java.awt.Color;
import java.awt.CardLayout;
import java.io.File;
import java.io.IOException;
import java.time.LocalDate;

import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
//import javax.swing.tree.TreePath;

public class Window extends javax.swing.JFrame {

    /**
     * Serialize the class
     */
    private static final long serialVersionUID = 1L;

    private static FileHandler fileHandler;
    private static PurchaseTracker purchaseTracker;

    private final CardLayout layout;

    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
        this.layout = (CardLayout) cards.getLayout();
        layout.first(cards);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is 
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        addingPage = new javax.swing.JDialog();
        addPageDialog = new javax.swing.JPanel();
        jTextField13 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        addingNotebook = new javax.swing.JDialog();
        addNotebookDialog = new javax.swing.JPanel();
        jTextField14 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jButton15 = new javax.swing.JButton();
        citGenerator = new javax.swing.JDialog();
        citations = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jTextField6 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextArea5 = new javax.swing.JTextArea();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jButton16 = new javax.swing.JButton();
        cards = new javax.swing.JPanel();
        card1 = new javax.swing.JPanel();
        mainPanel1 = new javax.swing.JPanel();
        login = new javax.swing.JPanel();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextArea2 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        card2 = new javax.swing.JPanel();
        mainPanel2 = new javax.swing.JPanel();
        register = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        card3 = new javax.swing.JPanel();
        mainPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        card4 = new javax.swing.JPanel();
        mainPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton10 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jSeparator3 = new javax.swing.JSeparator();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel14 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox6 = new javax.swing.JComboBox<>();
        card5 = new javax.swing.JPanel();
        mainPanel5 = new javax.swing.JLayeredPane();
        field = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        tree = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        treeUpgrader = new javax.swing.JPanel();
        jButton18 = new javax.swing.JButton();
        bushes = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        bushesBuyer = new javax.swing.JPanel();
        jButton22 = new javax.swing.JButton();
        bushesUpgrader = new javax.swing.JPanel();
        jButton23 = new javax.swing.JButton();
        roses = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        rosesBuyer = new javax.swing.JPanel();
        jButton27 = new javax.swing.JButton();
        fruitsPlot = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        fruitsPlotBuyer = new javax.swing.JPanel();
        jButton29 = new javax.swing.JButton();
        fruits = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        fruitsBuyer = new javax.swing.JPanel();
        jButton30 = new javax.swing.JButton();
        vegetablesPlot = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        vegetablesPlotBuyer = new javax.swing.JPanel();
        jButton28 = new javax.swing.JButton();
        vegetables = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        vegetablesBuyer = new javax.swing.JPanel();
        jButton31 = new javax.swing.JButton();
        treehouse = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        treehouseBuyer = new javax.swing.JPanel();
        jButton32 = new javax.swing.JButton();
        greenhouse = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        greenhouseBuyer = new javax.swing.JPanel();
        jButton33 = new javax.swing.JButton();
        controls = new javax.swing.JPanel();
        jButton17 = new javax.swing.JButton();
        credits = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();

        // Favicon and title for JFrame
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EZ Notes - Login");
        setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage("images/ez.png"));

        // Icons for JTree
        ImageIcon leafIcon = new ImageIcon("images/page_icon.png");
        ImageIcon openIcon = new ImageIcon("images/notebook_open_icon.png");
        ImageIcon closedIcon = new ImageIcon("images/notebook_icon.png");

        DefaultTreeCellRenderer renderer = new DefaultTreeCellRenderer();

        renderer.setLeafIcon(leafIcon);
        renderer.setOpenIcon(openIcon);
        renderer.setClosedIcon(closedIcon);

        jTree1.setCellRenderer(renderer);

        addPageDialog.setBackground(new java.awt.Color(240, 240, 240));

        jTextField13.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel25.setIcon(new javax.swing.ImageIcon("images/page.png")); // NOI18N

        jLabel27.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel27.setText("(file name).txt");

        jLabel28.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel28.setText("Enter a name for this page:");

        jButton14.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton14.setText("OK");
        jButton14.setAlignmentY(0.0F);
        jButton14.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addPageDialogLayout = new javax.swing.GroupLayout(addPageDialog);
        addPageDialog.setLayout(addPageDialogLayout);
        addPageDialogLayout.setHorizontalGroup(
            addPageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPageDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField13)
                    .addGroup(addPageDialogLayout.createSequentialGroup()
                        .addGroup(addPageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addGroup(addPageDialogLayout.createSequentialGroup()
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel27)))
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(addPageDialogLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );
        addPageDialogLayout.setVerticalGroup(
            addPageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPageDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPageDialogLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPageDialogLayout.createSequentialGroup()
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)))
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout addingPageLayout = new javax.swing.GroupLayout(addingPage.getContentPane());
        addingPage.getContentPane().setLayout(addingPageLayout);
        addingPageLayout.setHorizontalGroup(
            addingPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
            .addGroup(addingPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addingPageLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(addPageDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        addingPageLayout.setVerticalGroup(
            addingPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 184, Short.MAX_VALUE)
            .addGroup(addingPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addingPageLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(addPageDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        addPageDialog.getAccessibleContext().setAccessibleName("");

        addNotebookDialog.setBackground(new java.awt.Color(240, 240, 240));
        addNotebookDialog.setPreferredSize(new java.awt.Dimension(220, 184));

        jTextField14.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField14ActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel26.setText("Enter a name for this notebook:");

        jLabel29.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel29.setIcon(new javax.swing.ImageIcon("images/notebook.png")); // NOI18N

        jLabel30.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel30.setText("(directory name)");

        jButton15.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton15.setText("OK");
        jButton15.setAlignmentY(0.0F);
        jButton15.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					jButton15ActionPerformed(evt);
				} catch (IOException e) {
					e.printStackTrace();
				}
            }
        });

        javax.swing.GroupLayout addNotebookDialogLayout = new javax.swing.GroupLayout(addNotebookDialog);
        addNotebookDialog.setLayout(addNotebookDialogLayout);
        addNotebookDialogLayout.setHorizontalGroup(
            addNotebookDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addNotebookDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addNotebookDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField14)
                    .addGroup(addNotebookDialogLayout.createSequentialGroup()
                        .addGroup(addNotebookDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addGroup(addNotebookDialogLayout.createSequentialGroup()
                                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel30)))
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(addNotebookDialogLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );
        addNotebookDialogLayout.setVerticalGroup(
            addNotebookDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addNotebookDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addNotebookDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addNotebookDialogLayout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addNotebookDialogLayout.createSequentialGroup()
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)))
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout addingNotebookLayout = new javax.swing.GroupLayout(addingNotebook.getContentPane());
        addingNotebook.getContentPane().setLayout(addingNotebookLayout);
        addingNotebookLayout.setHorizontalGroup(
            addingNotebookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
            .addGroup(addingNotebookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addingNotebookLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(addNotebookDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        addingNotebookLayout.setVerticalGroup(
            addingNotebookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 184, Short.MAX_VALUE)
            .addGroup(addingNotebookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addingNotebookLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(addNotebookDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        citations.setBackground(new java.awt.Color(255, 255, 255));
        citations.setFocusTraversalPolicyProvider(true);
        citations.setPreferredSize(new java.awt.Dimension(536, 380));

        jLabel15.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel15.setText("MLA Citation Generator");

        jComboBox5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Website", "Journal", "Book", "Article" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPerformed(evt);
            }
        });

        // To be implemented in a future version
        jComboBox5.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel16.setText("Title:");

        jTextField6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel17.setText("URL:");

        jLabel18.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel18.setText("Format:");

        jTextField7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPerformed(evt);
            }
        });

        jTextArea5.setEditable(false);
        jTextArea5.setBackground(new java.awt.Color(239, 239, 239));
        jTextArea5.setColumns(20);
        jTextArea5.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jTextArea5.setLineWrap(true);
        jTextArea5.setRows(5);
        jTextArea5.setText("(citation prints here)");
        jTextArea5.setWrapStyleWord(true);
        jTextArea5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(239, 239, 239), 10));
        jTextArea5.setFocusable(true);

        jLabel19.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel19.setText("Author:");

        jLabel20.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel20.setText("Last name:");

        jTextField8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel21.setText("First name:");

        jTextField9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel22.setText("Publication Date (mm/dd/yyyy):");

        jTextField10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel23.setText("Publisher:");

        jTextField11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel24.setText("Access Date (mm/dd/yyyy):");

        jTextField12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPerformed(evt);
            }
        });

        jButton16.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton16.setText("OK");
        jButton16.setAlignmentY(0.0F);
        jButton16.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout citationsLayout = new javax.swing.GroupLayout(citations);
        citations.setLayout(citationsLayout);
        citationsLayout.setHorizontalGroup(
            citationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(citationsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(citationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(citationsLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(citationsLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(citationsLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))
                    .addGroup(citationsLayout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, citationsLayout.createSequentialGroup()
                        .addGroup(citationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(citationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(citationsLayout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField9, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                            .addComponent(jTextField6)
                            .addComponent(jTextField7)))
                    .addComponent(jTextArea5)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        citationsLayout.setVerticalGroup(
            citationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(citationsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(citationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(citationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(citationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(citationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(citationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(citationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(citationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextArea5, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout citGeneratorLayout = new javax.swing.GroupLayout(citGenerator.getContentPane());
        citGenerator.getContentPane().setLayout(citGeneratorLayout);
        citGeneratorLayout.setHorizontalGroup(
            citGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 551, Short.MAX_VALUE)
            .addGroup(citGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, citGeneratorLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(citations, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        citGeneratorLayout.setVerticalGroup(
            citGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 402, Short.MAX_VALUE)
            .addGroup(citGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, citGeneratorLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(citations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cards.setBackground(new java.awt.Color(153, 204, 255));
        cards.setLayout(new java.awt.CardLayout());

        card1.setBackground(new java.awt.Color(153, 204, 255));

        mainPanel1.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel1.setPreferredSize(new java.awt.Dimension(636, 480));

        login.setBackground(new java.awt.Color(255, 255, 255));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("This application is your one-stop shop for effective notetaking, without the feeling of being overwhelmed or distracted. Take notes, earn points, and collect rewards in this one-of-a-kind notes writer!");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setBorder(null);
        jTextArea1.setFocusable(false);

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel2.setText("Login");

        jTextField1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPerformed(evt);
            }
        });

        jPasswordField1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("Username:");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setText("Password:");

        jButton1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton1.setText("Login");
        jButton1.setAlignmentY(0.0F);
        jButton1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton1ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2)
                        .addGroup(jPanel12Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextField1))
                        .addGroup(jPanel12Layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(292, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel1.setText("Welcome to EZ Notes!");

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText("Dont't have an account?");
        jTextArea2.setWrapStyleWord(true);
        jTextArea2.setBorder(null);
        jTextArea2.setFocusable(false);

        jButton2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton2.setText("Register here");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginLayout = new javax.swing.GroupLayout(login);
        login.setLayout(loginLayout);
        loginLayout.setHorizontalGroup(
            loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton2)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        loginLayout.setVerticalGroup(
            loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanel1Layout = new javax.swing.GroupLayout(mainPanel1);
        mainPanel1.setLayout(mainPanel1Layout);
        mainPanel1Layout.setHorizontalGroup(
            mainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(mainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        mainPanel1Layout.setVerticalGroup(
            mainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(mainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout card1Layout = new javax.swing.GroupLayout(card1);
        card1.setLayout(card1Layout);
        card1Layout.setHorizontalGroup(
            card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        card1Layout.setVerticalGroup(
            card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cards.add(card1, "login");

        card2.setBackground(new java.awt.Color(153, 204, 255));

        mainPanel2.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel2.setPreferredSize(new java.awt.Dimension(636, 480));

        register.setBackground(new java.awt.Color(255, 255, 255));

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel5.setText("Register");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel6.setText("Birthday (mm/dd/yyyy):");

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel7.setText("Nickname:");

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jTextField2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPerformed(evt);
            }
        });

        jTextField3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel8.setText("Username:");

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel9.setText("Password:");

        jTextField4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPerformed(evt);
            }
        });

        jTextField5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton3.setText("Register");
        jButton3.setAlignmentY(0.0F);
        jButton3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                        jButton3ActionPerformed(evt);
                } catch (IOException e) {
                        e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5)
                        .addGroup(jPanel14Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel14Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextField3))
                        .addGroup(jPanel14Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addGap(14, 14, 14)
                            .addComponent(jTextField5)))
                    .addComponent(jButton3))
                .addContainerGap(294, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton4.setText("< Exit");
        jButton4.setAlignmentY(0.0F);
        jButton4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registerLayout = new javax.swing.GroupLayout(register);
        register.setLayout(registerLayout);
        registerLayout.setHorizontalGroup(
            registerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(registerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        registerLayout.setVerticalGroup(
            registerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanel2Layout = new javax.swing.GroupLayout(mainPanel2);
        mainPanel2.setLayout(mainPanel2Layout);
        mainPanel2Layout.setHorizontalGroup(
            mainPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 636, Short.MAX_VALUE)
            .addGroup(mainPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(register, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        mainPanel2Layout.setVerticalGroup(
            mainPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(mainPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(register, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout card2Layout = new javax.swing.GroupLayout(card2);
        card2.setLayout(card2Layout);
        card2Layout.setHorizontalGroup(
            card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        card2Layout.setVerticalGroup(
            card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cards.add(card2, "register");

        card3.setBackground(new java.awt.Color(153, 204, 255));
        card3.setPreferredSize(new java.awt.Dimension(656, 502));

        mainPanel3.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel3.setPreferredSize(new java.awt.Dimension(636, 480));

        jLabel10.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel10.setText("Hello, (username).");

        jButton5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton5.setText("Go to Garden");
        jButton5.setAlignmentY(0.0F);
        jButton5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton5ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        jLabel11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel11.setText("Credits:");

        jLabel12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel12.setText("(number of user's credits)");

        jScrollPane1.setViewportView(jTree1);

        jButton6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton6.setText("Add notebook...");
        jButton6.setAlignmentY(0.0F);
        jButton6.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                        jButton6ActionPerformed(evt);
                } catch (IOException e) {
                        e.printStackTrace();
                }
            }
        });

        jButton7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton7.setText("Add page...");
        jButton7.setAlignmentY(0.0F);
        jButton7.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                        jButton7ActionPerformed(evt);
                } catch (IOException e) {
                        e.printStackTrace();
                }
            }
        });

        jButton8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton8.setText("< Log out");
        jButton8.setAlignmentY(0.0F);
        jButton8.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton9.setText("Refresh");
        jButton9.setAlignmentY(0.0F);
        jButton9.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton13.setText("Delete...");
        jButton13.setAlignmentY(0.0F);
        jButton13.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanel3Layout = new javax.swing.GroupLayout(mainPanel3);
        mainPanel3.setLayout(mainPanel3Layout);
        mainPanel3Layout.setHorizontalGroup(
            mainPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(mainPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanel3Layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanel3Layout.createSequentialGroup()
                        .addGroup(mainPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(mainPanel3Layout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addGap(18, 18, 18)
                                .addComponent(jButton7)
                                .addGap(18, 18, 18)
                                .addComponent(jButton9)
                                .addGap(18, 18, 18)
                                .addComponent(jButton13)
                                .addGap(0, 144, Short.MAX_VALUE))
                            .addComponent(jSeparator2)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(30, 30, 30))))
        );
        mainPanel3Layout.setVerticalGroup(
            mainPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(mainPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jButton5))
                .addGap(18, 18, 18)
                .addGroup(mainPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton9)
                    .addComponent(jButton13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addGap(67, 67, 67))
        );

        javax.swing.GroupLayout card3Layout = new javax.swing.GroupLayout(card3);
        card3.setLayout(card3Layout);
        card3Layout.setHorizontalGroup(
            card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card3Layout.createSequentialGroup()
                .addGap(0, 10, Short.MAX_VALUE)
                .addComponent(mainPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        card3Layout.setVerticalGroup(
            card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card3Layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(mainPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        cards.add(card3, "home");

        card4.setBackground(new java.awt.Color(153, 204, 255));

        mainPanel4.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel4.setPreferredSize(new java.awt.Dimension(636, 480));

        jLabel13.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel13.setText("(file name).txt");

        jComboBox1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Standard Mode", "Focus Mode", "Zen Mode" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jComboBox1ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        jButton10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton10.setText("Cite work...");
        jButton10.setAlignmentY(0.0F);
        jButton10.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jTextArea3.setRows(5);
        jScrollPane2.setViewportView(jTextArea3);

        jButton11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton11.setText("< Exit");
        jButton11.setAlignmentY(0.0F);
        jButton11.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton12.setText("Save");
        jButton12.setAlignmentY(0.0F);
        jButton12.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton12ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        jComboBox2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plain", "Bold", "Italic", "Bold Italic" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jProgressBar1.setValue(50);

        jLabel14.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel14.setText("Progress is not being tracked");

        jComboBox3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Consolas", "Arial", "Calibri" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jComboBox4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8", "10", "11", "12", "14", "16" }));
        jComboBox4.setSelectedIndex(3);
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jComboBox6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "Red", "Blue", "Yellow", "Green", "Orange", "Magenta" }));
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanel4Layout = new javax.swing.GroupLayout(mainPanel4);
        mainPanel4.setLayout(mainPanel4Layout);
        mainPanel4Layout.setHorizontalGroup(
            mainPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanel4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(mainPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanel4Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jButton11)
                        .addGap(18, 18, 18)
                        .addComponent(jButton12)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanel4Layout.createSequentialGroup()
                        .addGroup(mainPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanel4Layout.createSequentialGroup()
                                .addGroup(mainPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18))
                                    .addGroup(mainPanel4Layout.createSequentialGroup()
                                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)))
                                .addGroup(mainPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(mainPanel4Layout.createSequentialGroup()
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                                .addGroup(mainPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))))
                        .addGap(30, 30, 30))))
        );
        mainPanel4Layout.setVerticalGroup(
            mainPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanel4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(mainPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(mainPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainPanel4Layout.createSequentialGroup()
                        .addGroup(mainPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10))
                        .addGap(2, 2, 2))
                    .addGroup(mainPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout card4Layout = new javax.swing.GroupLayout(card4);
        card4.setLayout(card4Layout);
        card4Layout.setHorizontalGroup(
            card4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        card4Layout.setVerticalGroup(
            card4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cards.add(card4, "notesWriter");

        card5.setBackground(new java.awt.Color(153, 204, 255));

        mainPanel5.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        mainPanel5.setPreferredSize(new java.awt.Dimension(636, 480));
        mainPanel5.setLayout(new javax.swing.OverlayLayout(mainPanel5));

        jLabel32.setIcon(new javax.swing.ImageIcon("images/background.png")); // NOI18N

        javax.swing.GroupLayout fieldLayout = new javax.swing.GroupLayout(field);
        field.setLayout(fieldLayout);
        fieldLayout.setHorizontalGroup(
            fieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        fieldLayout.setVerticalGroup(
            fieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        mainPanel5.setLayer(field, 1);
        mainPanel5.add(field);

        tree.setOpaque(false);

        jLabel38.setIcon(new javax.swing.ImageIcon("images/lvl1_tree.png")); // NOI18N

        javax.swing.GroupLayout treeLayout = new javax.swing.GroupLayout(tree);
        tree.setLayout(treeLayout);
        treeLayout.setHorizontalGroup(
            treeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, treeLayout.createSequentialGroup()
                .addContainerGap(284, Short.MAX_VALUE)
                .addComponent(jLabel38)
                .addContainerGap(280, Short.MAX_VALUE))
        );
        treeLayout.setVerticalGroup(
            treeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, treeLayout.createSequentialGroup()
                .addContainerGap(211, Short.MAX_VALUE)
                .addComponent(jLabel38)
                .addGap(173, 173, 173))
        );

        mainPanel5.setLayer(tree, 3);
        mainPanel5.add(tree);

        treeUpgrader.setOpaque(false);

        jButton18.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        jButton18.setText("Upgrade Tree to Level 2 (500 credits)");
        jButton18.setToolTipText("");
        jButton18.setAlignmentY(0.0F);
        jButton18.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					jButton18ActionPerformed(evt);
				} catch (IOException e) {
					e.printStackTrace();
				}
            }
        });

        javax.swing.GroupLayout treeUpgraderLayout = new javax.swing.GroupLayout(treeUpgrader);
        treeUpgrader.setLayout(treeUpgraderLayout);
        treeUpgraderLayout.setHorizontalGroup(
            treeUpgraderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treeUpgraderLayout.createSequentialGroup()
                .addGap(237, 237, 237)
                .addComponent(jButton18)
                .addGap(238, 238, 238))
        );
        treeUpgraderLayout.setVerticalGroup(
            treeUpgraderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treeUpgraderLayout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jButton18)
                .addGap(330, 330, 330))
        );

        mainPanel5.setLayer(treeUpgrader, 7);
        mainPanel5.add(treeUpgrader);

        bushes.setOpaque(false);

        jLabel31.setIcon(new javax.swing.ImageIcon("images/lvl1_bushes.png")); // NOI18N
        jLabel31.setVisible(false);

        javax.swing.GroupLayout bushesLayout = new javax.swing.GroupLayout(bushes);
        bushes.setLayout(bushesLayout);
        bushesLayout.setHorizontalGroup(
            bushesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bushesLayout.createSequentialGroup()
                .addContainerGap(235, Short.MAX_VALUE)
                .addComponent(jLabel31)
                .addContainerGap(213, Short.MAX_VALUE))
        );
        bushesLayout.setVerticalGroup(
            bushesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bushesLayout.createSequentialGroup()
                .addContainerGap(224, Short.MAX_VALUE)
                .addComponent(jLabel31)
                .addGap(103, 103, 103))
        );

        mainPanel5.setLayer(bushes, 2);
        mainPanel5.add(bushes);

        bushesBuyer.setOpaque(false);

        jButton22.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        jButton22.setText("Buy Bushes (100 credits)");
        jButton22.setToolTipText("");
        jButton22.setAlignmentY(0.0F);
        jButton22.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton22ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout bushesBuyerLayout = new javax.swing.GroupLayout(bushesBuyer);
        bushesBuyer.setLayout(bushesBuyerLayout);
        bushesBuyerLayout.setHorizontalGroup(
            bushesBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bushesBuyerLayout.createSequentialGroup()
                .addGap(270, 270, 270)
                .addComponent(jButton22)
                .addGap(253, 253, 253))
        );
        bushesBuyerLayout.setVerticalGroup(
            bushesBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bushesBuyerLayout.createSequentialGroup()
                .addGap(334, 334, 334)
                .addComponent(jButton22)
                .addGap(141, 141, 141))
        );

        mainPanel5.setLayer(bushesBuyer, 7);
        mainPanel5.add(bushesBuyer);

        bushesUpgrader.setOpaque(false);

        jButton23.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        jButton23.setText("Upgrade Bushes to Level 2 (150 credits)");
        jButton23.setToolTipText("");
        jButton23.setAlignmentY(0.0F);
        jButton23.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton23ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
        jButton23.setVisible(false);

        javax.swing.GroupLayout bushesUpgraderLayout = new javax.swing.GroupLayout(bushesUpgrader);
        bushesUpgrader.setLayout(bushesUpgraderLayout);
        bushesUpgraderLayout.setHorizontalGroup(
            bushesUpgraderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bushesUpgraderLayout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(jButton23)
                .addGap(223, 223, 223))
        );
        bushesUpgraderLayout.setVerticalGroup(
            bushesUpgraderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bushesUpgraderLayout.createSequentialGroup()
                .addGap(333, 333, 333)
                .addComponent(jButton23)
                .addGap(142, 142, 142))
        );

        mainPanel5.setLayer(bushesUpgrader, 7);
        mainPanel5.add(bushesUpgrader);

        roses.setOpaque(false);

        jLabel34.setIcon(new javax.swing.ImageIcon("images/lvl1_roses.png")); // NOI18N
        jLabel34.setVisible(false);

        javax.swing.GroupLayout rosesLayout = new javax.swing.GroupLayout(roses);
        roses.setLayout(rosesLayout);
        rosesLayout.setHorizontalGroup(
            rosesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rosesLayout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(jLabel34)
                .addGap(398, 398, 398))
        );
        rosesLayout.setVerticalGroup(
            rosesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rosesLayout.createSequentialGroup()
                .addGap(324, 324, 324)
                .addComponent(jLabel34)
                .addContainerGap())
        );

        mainPanel5.setLayer(roses, 4);
        mainPanel5.add(roses);

        rosesBuyer.setOpaque(false);

        jButton27.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        jButton27.setText("Buy Roses (1000 credits)");
        jButton27.setToolTipText("");
        jButton27.setAlignmentY(0.0F);
        jButton27.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton27ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout rosesBuyerLayout = new javax.swing.GroupLayout(rosesBuyer);
        rosesBuyer.setLayout(rosesBuyerLayout);
        rosesBuyerLayout.setHorizontalGroup(
            rosesBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rosesBuyerLayout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(jButton27)
                .addGap(378, 378, 378))
        );
        rosesBuyerLayout.setVerticalGroup(
            rosesBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rosesBuyerLayout.createSequentialGroup()
                .addGap(402, 402, 402)
                .addComponent(jButton27)
                .addGap(73, 73, 73))
        );

        mainPanel5.setLayer(rosesBuyer, 7);
        mainPanel5.add(rosesBuyer);

        fruitsPlot.setOpaque(false);

        jLabel33.setIcon(new javax.swing.ImageIcon("images/fruits_plot.png")); // NOI18N
        jLabel33.setVisible(false);

        javax.swing.GroupLayout fruitsPlotLayout = new javax.swing.GroupLayout(fruitsPlot);
        fruitsPlot.setLayout(fruitsPlotLayout);
        fruitsPlotLayout.setHorizontalGroup(
            fruitsPlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fruitsPlotLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel33)
                .addGap(481, 481, 481))
        );
        fruitsPlotLayout.setVerticalGroup(
            fruitsPlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fruitsPlotLayout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jLabel33)
                .addContainerGap())
        );

        mainPanel5.setLayer(fruitsPlot, 4);
        mainPanel5.add(fruitsPlot);

        fruitsPlotBuyer.setOpaque(false);

        jButton29.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        jButton29.setText("Buy Fruit Plot (2000 credits)");
        jButton29.setToolTipText("");
        jButton29.setAlignmentY(0.0F);
        jButton29.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton29ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout fruitsPlotBuyerLayout = new javax.swing.GroupLayout(fruitsPlotBuyer);
        fruitsPlotBuyer.setLayout(fruitsPlotBuyerLayout);
        fruitsPlotBuyerLayout.setHorizontalGroup(
            fruitsPlotBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fruitsPlotBuyerLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jButton29)
                .addGap(490, 490, 490))
        );
        fruitsPlotBuyerLayout.setVerticalGroup(
            fruitsPlotBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fruitsPlotBuyerLayout.createSequentialGroup()
                .addGap(362, 362, 362)
                .addComponent(jButton29)
                .addGap(113, 113, 113))
        );

        mainPanel5.setLayer(fruitsPlotBuyer, 7);
        mainPanel5.add(fruitsPlotBuyer);

        fruits.setOpaque(false);

        jLabel36.setIcon(new javax.swing.ImageIcon("images/fruits.png")); // NOI18N
        jLabel36.setVisible(false);

        jLabel37.setIcon(new javax.swing.ImageIcon("images/fruits.png")); // NOI18N
        jLabel37.setVisible(false);

        jLabel39.setIcon(new javax.swing.ImageIcon("images/fruits.png")); // NOI18N
        jLabel39.setVisible(false);

        jLabel40.setIcon(new javax.swing.ImageIcon("images/fruits.png")); // NOI18N
        jLabel40.setVisible(false);

        javax.swing.GroupLayout fruitsLayout = new javax.swing.GroupLayout(fruits);
        fruits.setLayout(fruitsLayout);
        fruitsLayout.setHorizontalGroup(
            fruitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fruitsLayout.createSequentialGroup()
                .addGroup(fruitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37)
                    .addComponent(jLabel36))
                .addGap(0, 0, 0))
            .addGroup(fruitsLayout.createSequentialGroup()
                .addGroup(fruitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel39)
                    .addComponent(jLabel40))
                .addGap(473, 473, 473))
        );
        fruitsLayout.setVerticalGroup(
            fruitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fruitsLayout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel39)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40)
                .addContainerGap())
        );

        mainPanel5.setLayer(fruits, 5);
        mainPanel5.add(fruits);

        fruitsBuyer.setOpaque(false);

        jButton30.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        jButton30.setText("Buy Fruits (500 credits)");
        jButton30.setToolTipText("");
        jButton30.setAlignmentY(0.0F);
        jButton30.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton30ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
        jButton30.setVisible(false);

        javax.swing.GroupLayout fruitsBuyerLayout = new javax.swing.GroupLayout(fruitsBuyer);
        fruitsBuyer.setLayout(fruitsBuyerLayout);
        fruitsBuyerLayout.setHorizontalGroup(
            fruitsBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fruitsBuyerLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButton30)
                .addGap(500, 500, 500))
        );
        fruitsBuyerLayout.setVerticalGroup(
            fruitsBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fruitsBuyerLayout.createSequentialGroup()
                .addGap(246, 246, 246)
                .addComponent(jButton30)
                .addGap(229, 229, 229))
        );

        mainPanel5.setLayer(fruitsBuyer, 7);
        mainPanel5.add(fruitsBuyer);

        vegetablesPlot.setOpaque(false);

        jLabel35.setIcon(new javax.swing.ImageIcon("images/vegs_plot.png")); // NOI18N
        jLabel35.setVisible(false);

        javax.swing.GroupLayout vegetablesPlotLayout = new javax.swing.GroupLayout(vegetablesPlot);
        vegetablesPlot.setLayout(vegetablesPlotLayout);
        vegetablesPlotLayout.setHorizontalGroup(
            vegetablesPlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vegetablesPlotLayout.createSequentialGroup()
                .addGap(262, 262, 262)
                .addComponent(jLabel35)
                .addGap(162, 162, 162))
        );
        vegetablesPlotLayout.setVerticalGroup(
            vegetablesPlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vegetablesPlotLayout.createSequentialGroup()
                .addGap(406, 406, 406)
                .addComponent(jLabel35)
                .addContainerGap())
        );

        mainPanel5.setLayer(vegetablesPlot, 4);
        mainPanel5.add(vegetablesPlot);

        vegetablesPlotBuyer.setOpaque(false);

        jButton28.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        jButton28.setText("Buy Vegetable Plot (1000 credits)");
        jButton28.setToolTipText("");
        jButton28.setAlignmentY(0.0F);
        jButton28.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton28ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout vegetablesPlotBuyerLayout = new javax.swing.GroupLayout(vegetablesPlotBuyer);
        vegetablesPlotBuyer.setLayout(vegetablesPlotBuyerLayout);
        vegetablesPlotBuyerLayout.setHorizontalGroup(
            vegetablesPlotBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vegetablesPlotBuyerLayout.createSequentialGroup()
                .addGap(268, 268, 268)
                .addComponent(jButton28)
                .addGap(221, 221, 221))
        );
        vegetablesPlotBuyerLayout.setVerticalGroup(
            vegetablesPlotBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vegetablesPlotBuyerLayout.createSequentialGroup()
                .addGap(435, 435, 435)
                .addComponent(jButton28)
                .addGap(40, 40, 40))
        );

        mainPanel5.setLayer(vegetablesPlotBuyer, 7);
        mainPanel5.add(vegetablesPlotBuyer);

        vegetables.setOpaque(false);

        jLabel41.setIcon(new javax.swing.ImageIcon("images/vegs.png")); // NOI18N
        jLabel41.setVisible(false);

        jLabel42.setIcon(new javax.swing.ImageIcon("images/vegs.png")); // NOI18N
        jLabel42.setVisible(false);

        jLabel43.setIcon(new javax.swing.ImageIcon("images/vegs.png")); // NOI18N
        jLabel43.setVisible(false);

        javax.swing.GroupLayout vegetablesLayout = new javax.swing.GroupLayout(vegetables);
        vegetables.setLayout(vegetablesLayout);
        vegetablesLayout.setHorizontalGroup(
            vegetablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vegetablesLayout.createSequentialGroup()
                .addGap(270, 270, 270)
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel41)
                .addGap(221, 221, 221))
        );
        vegetablesLayout.setVerticalGroup(
            vegetablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vegetablesLayout.createSequentialGroup()
                .addGap(409, 409, 409)
                .addGroup(vegetablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel41)
                    .addComponent(jLabel42)
                    .addComponent(jLabel43))
                .addContainerGap())
        );

        mainPanel5.setLayer(vegetables, 5);
        mainPanel5.add(vegetables);

        vegetablesBuyer.setOpaque(false);

        jButton31.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        jButton31.setText("Buy Vegetables (250 credits)");
        jButton31.setToolTipText("");
        jButton31.setAlignmentY(0.0F);
        jButton31.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton31ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
        jButton31.setVisible(false);

        javax.swing.GroupLayout vegetablesBuyerLayout = new javax.swing.GroupLayout(vegetablesBuyer);
        vegetablesBuyer.setLayout(vegetablesBuyerLayout);
        vegetablesBuyerLayout.setHorizontalGroup(
            vegetablesBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vegetablesBuyerLayout.createSequentialGroup()
                .addGap(279, 279, 279)
                .addComponent(jButton31)
                .addGap(228, 228, 228))
        );
        vegetablesBuyerLayout.setVerticalGroup(
            vegetablesBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vegetablesBuyerLayout.createSequentialGroup()
                .addGap(383, 383, 383)
                .addComponent(jButton31)
                .addGap(92, 92, 92))
        );

        mainPanel5.setLayer(vegetablesBuyer, 7);
        mainPanel5.add(vegetablesBuyer);

        treehouse.setOpaque(false);

        jLabel44.setIcon(new javax.swing.ImageIcon("images/treehouse.png")); // NOI18N
        jLabel44.setVisible(false);

        javax.swing.GroupLayout treehouseLayout = new javax.swing.GroupLayout(treehouse);
        treehouse.setLayout(treehouseLayout);
        treehouseLayout.setHorizontalGroup(
            treehouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treehouseLayout.createSequentialGroup()
                .addGap(259, 259, 259)
                .addComponent(jLabel44)
                .addGap(271, 271, 271))
        );
        treehouseLayout.setVerticalGroup(
            treehouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treehouseLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel44)
                .addGap(374, 374, 374))
        );

        mainPanel5.setLayer(treehouse, 4);
        mainPanel5.add(treehouse);

        treehouseBuyer.setOpaque(false);

        jButton32.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        jButton32.setText("Build Treehouse (4000 credits)");
        jButton32.setToolTipText("");
        jButton32.setAlignmentY(0.0F);
        jButton32.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton32ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout treehouseBuyerLayout = new javax.swing.GroupLayout(treehouseBuyer);
        treehouseBuyer.setLayout(treehouseBuyerLayout);
        treehouseBuyerLayout.setHorizontalGroup(
            treehouseBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treehouseBuyerLayout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addComponent(jButton32)
                .addGap(256, 256, 256))
        );
        treehouseBuyerLayout.setVerticalGroup(
            treehouseBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treehouseBuyerLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jButton32)
                .addGap(399, 399, 399))
        );

        mainPanel5.setLayer(treehouseBuyer, 7);
        mainPanel5.add(treehouseBuyer);

        greenhouse.setOpaque(false);

        jLabel45.setIcon(new javax.swing.ImageIcon("images/greenhouse.png")); // NOI18N
        jLabel45.setVisible(false);

        javax.swing.GroupLayout greenhouseLayout = new javax.swing.GroupLayout(greenhouse);
        greenhouse.setLayout(greenhouseLayout);
        greenhouseLayout.setHorizontalGroup(
            greenhouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, greenhouseLayout.createSequentialGroup()
                .addGap(456, 456, 456)
                .addComponent(jLabel45)
                .addGap(39, 39, 39))
        );
        greenhouseLayout.setVerticalGroup(
            greenhouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(greenhouseLayout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addComponent(jLabel45)
                .addGap(258, 258, 258))
        );

        mainPanel5.setLayer(greenhouse, 2);
        mainPanel5.add(greenhouse);

        greenhouseBuyer.setOpaque(false);

        jButton33.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        jButton33.setText("Build Greenhouse (6000 credits)");
        jButton33.setToolTipText("");
        jButton33.setAlignmentY(0.0F);
        jButton33.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton33ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout greenhouseBuyerLayout = new javax.swing.GroupLayout(greenhouseBuyer);
        greenhouseBuyer.setLayout(greenhouseBuyerLayout);
        greenhouseBuyerLayout.setHorizontalGroup(
            greenhouseBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, greenhouseBuyerLayout.createSequentialGroup()
                .addGap(436, 436, 436)
                .addComponent(jButton33)
                .addGap(33, 33, 33))
        );
        greenhouseBuyerLayout.setVerticalGroup(
            greenhouseBuyerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(greenhouseBuyerLayout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jButton33)
                .addGap(321, 321, 321))
        );

        mainPanel5.setLayer(greenhouseBuyer, 7);
        mainPanel5.add(greenhouseBuyer);

        controls.setOpaque(false);

        jButton17.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton17.setText("< Exit");
        jButton17.setAlignmentY(0.0F);
        jButton17.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        credits.setBackground(new java.awt.Color(255, 255, 255));

        jLabel46.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel46.setText("Credits:");

        jLabel47.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel47.setText("(number of user's credits)");

        javax.swing.GroupLayout creditsLayout = new javax.swing.GroupLayout(credits);
        credits.setLayout(creditsLayout);
        creditsLayout.setHorizontalGroup(
            creditsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel46)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
        );
        creditsLayout.setVerticalGroup(
            creditsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, creditsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(creditsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout controlsLayout = new javax.swing.GroupLayout(controls);
        controls.setLayout(controlsLayout);
        controlsLayout.setHorizontalGroup(
            controlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlsLayout.createSequentialGroup()
                .addGap(430, 430, 430)
                .addComponent(credits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(controlsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton17)
                .addGap(577, 577, 577))
        );
        controlsLayout.setVerticalGroup(
            controlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlsLayout.createSequentialGroup()
                .addComponent(credits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(408, 408, 408)
                .addComponent(jButton17)
                .addContainerGap())
        );

        mainPanel5.setLayer(controls, 6);
        mainPanel5.add(controls);

        javax.swing.GroupLayout card5Layout = new javax.swing.GroupLayout(card5);
        card5.setLayout(card5Layout);
        card5Layout.setHorizontalGroup(
            card5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        card5Layout.setVerticalGroup(
            card5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cards.add(card5, "garden");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 682, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(cards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 524, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(cards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );


        // Custom popup window for adding a notebook
        addingNotebook.setTitle("Adding a Notebook");
        addingNotebook.setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage("images/ez.png"));
        addingNotebook.setResizable(false);
        addingNotebook.setLocation(225, 175);
        addingNotebook.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        addingNotebook.setModal(true);
        addingNotebook.pack();

        // Custom popup window for adding a page
        addingPage.setTitle("Adding a Page");
        addingPage.setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage("images/ez.png"));
        addingPage.setResizable(false);
        addingPage.setLocation(225, 175);
        addingPage.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        addingPage.setModal(true);
        addingPage.pack();

        // Custom popup window for the citation generator
        citGenerator.setTitle("MLA Citation Generator");
        citGenerator.setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage("images/ez.png"));
        citGenerator.setResizable(false);
        citGenerator.setLocation(225, 175);
        citGenerator.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        citGenerator.setModal(false);
        citGenerator.pack();

        pack();
    }// </editor-fold>                           

    // "Login" button on login page
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) throws IOException{                                         
        // Get jTextField information
        String username = jTextField1.getText().trim();
        char[] arrPassword = jPasswordField1.getPassword();

        // Parse char[] password to a string
        String password = User.parsePassword(arrPassword);

        // Create an "under-defined" User object
        User loginUser = new User(username, password);

        if(loginUser.exists())
        {
            // Set the file of the discovered user to use getter methods and track credits purchases
            loginUser.setUserFile(new File("userdata/" + username + ".txt"));
            purchaseTracker = new PurchaseTracker(new File("userdata/" + username + ".txt"));

            // If this user is found, get their nickname and birthday
            String nickname = loginUser.getNickname(1);
            String birthday = loginUser.getBirthday(1);
            
            // "Fully-define" previous user object and save it as the current logged in user
            loginUser = new User(username, password, nickname, birthday);
            FileHandler.currentUser = loginUser;

            // Compare today's date to the birthday date to see if it is this user's birthday
            String birthDate = birthday.substring(0, 5);
            String todaysDate = LocalDate.now().toString().substring(5, 10);
            todaysDate = todaysDate.replace('-', '/');

            purchaseTracker.updateCounters(jLabel12, jLabel47);

            if(todaysDate.equals(birthDate))
            {
                // Send reward popup
                JOptionPane.showMessageDialog(card1, "Happy birthday " + nickname + "!\nHere is a special 2500 credits for the occasion!",
                "Happy Birthday!", JOptionPane.INFORMATION_MESSAGE);

                // Reward this user with 2500 credits for their birthday
                loginUser.setCredits(loginUser.getCredits(2) + 2500);
            }
            else
            {
                // Send success pop-up
                JOptionPane.showMessageDialog(card1, "Login successful.\nWelcome back, " + nickname + "!",
                "Success", JOptionPane.INFORMATION_MESSAGE);
            }

            // Load user files for the current user
            fileHandler = new FileHandler(jTree1, jTextArea3, jProgressBar1, jLabel14);

            fileHandler.loadFiles();

            // Event listener for all documents listed in the JTree
            jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent e)
                {
                    // Get the selected tree node
                    DefaultMutableTreeNode item = (DefaultMutableTreeNode)jTree1.getLastSelectedPathComponent();
                    System.out.println(item);
                    
                    // Check if cursor is inside the tree
                    int location = jTree1.getRowForLocation(e.getX(),e.getY());
                    System.out.println(location);

                    try{
                        if(item.isLeaf())
                        {
                            String itemName = (String)item.getUserObject();
                            String itemRoot = "userfiles/" + FileHandler.currentUser.getUsername(2) + "/";

                            // Generate the path to the selected file
                            String filePath = FileHandler.findFile(itemName, itemRoot);

                            // Easier way to get the file path
                            /*
                            TreePath selection = jTree1.getSelectionPath();
                            System.out.println(selection);

                            String tempPath = "";
                            String[] tempArray = selection.toString().split(", ");
                            tempArray[0] = tempArray[0].substring(1);
                            tempArray[tempArray.length - 1] = tempArray[tempArray.length - 1].substring(0, tempArray[tempArray.length - 1].length() - 1);

                            for(String dir : tempArray)
                            {
                                tempPath += dir + "/";
                            }

                            String filePath = "userfiles/" + tempPath;
                            */
                            
                            FileHandler.currentFile = new File(filePath);
                            System.out.println(FileHandler.currentFile);

                            if(e.getClickCount() == 2)
                            {
                                // Print contents of a document into the textarea in the notes writer
                                fileHandler.loadPage();

                                jLabel13.setText(itemName);
                                jTree1.clearSelection();

                                // Reset notes writer settings
                                fileHandler.updateMode("Standard Mode");
                                fileHandler.updateFont("Consolas");
                                fileHandler.updateStyle(Font.PLAIN);
                                fileHandler.updateSize(12);

                                // Go to notes writer page
                                layout.show(cards, "notesWriter");
                                setTitle("EZ Notes - " + itemName);
                            }
                        }
                        
                        // Check if anywhere outside the tree was clicked
                        if(location < 0)
                        {
                            FileHandler.currentFile = null;
                            jTree1.clearSelection();
                        }
                        
                    }
                    catch(NullPointerException e1){
                        return;
                    } catch (IOException e2) {
						e2.printStackTrace();
					}
                }
            });
            
            jLabel10.setText("Hello, " + nickname + ".");

            // Go to user's home page 
            layout.show(cards, "home");
            setTitle("EZ Notes - Home");

            // Refresh textfields
            jTextField1.setText("");
            jPasswordField1.setText("");
        }
        else if(username.equals("") && password.equals(""))
        {
            // Send error pop-up
            JOptionPane.showMessageDialog(card1, "You have not inputted any information.\nPlease input your username and password.",
            "Error", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            // Send error pop-up
            JOptionPane.showMessageDialog(card1, "This user does not exist.\nPlease input another.",
            "Error", JOptionPane.WARNING_MESSAGE);

            // Refresh textfields
            jTextField1.setText("");
            jPasswordField1.setText("");
        }
    }                                        

    // "Register here" button on login page
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // Go to registration page
        layout.show(cards, "register");
        setTitle("EZ Notes - Login");
    }

    // "Register" button on registration page
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) throws IOException {                                         
        // Get jtextfield information
        String nickname = jTextField2.getText().trim();
        String birthday = jTextField3.getText().trim();
        String username = jTextField4.getText().trim();
        String password = jTextField5.getText().trim();

        // Check if all fields are empty
        if(nickname.equals("") && birthday.equals("") && username.equals("") && password.equals(""))
        {
            // Send error pop-up
            JOptionPane.showMessageDialog(card2, "You have not inputted any information.\nPlease input a nickname, birthday, username, and password to register.",
            "Error", JOptionPane.WARNING_MESSAGE);
        }

        // Instantiate user object
        User newUser = new User(username, password, nickname, birthday);

        if(newUser.areOpen() && newUser.birthdayFormat())
        {
            // Initialize user
            newUser.initUser();

            // Send success pop-up
            JOptionPane.showMessageDialog(card2, "Your account has been successfully registered.\nWelcome to EZ Notes!",
            "Success", JOptionPane.INFORMATION_MESSAGE);
            
            // Go to login page
            layout.show(cards, "login");
            setTitle("EZ Notes - Login");

            // Refresh textfields
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
        }
        else
        {
            if(!(newUser.areOpen()))
            {
                // Send error pop-up
                JOptionPane.showMessageDialog(card2, "Your inputted username or password has already been taken.\nPlease input another.",
                "Error", JOptionPane.WARNING_MESSAGE);

                // Refresh username and password textfields
                jTextField4.setText("");
                jTextField5.setText("");
            }
            else
            {
                // Send error pop-up
                JOptionPane.showMessageDialog(card2, "Your inputted birthday is incorrectly formatted (mm/dd/yyyy)\nPlease input your birthday again.",
                "Error", JOptionPane.WARNING_MESSAGE);

                // Refresh birthday textfields
                jTextField3.setText("");
            }
        }
    }                                        

    // "< Exit" button on registration page
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {  
        // Go to login page                                       
        layout.show(cards, "login");
        setTitle("EZ Notes - Login");

        // Refresh textfields
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
    }
    
    // "Go to Garden" button on Home page
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) throws IOException {                                         
        // Go to interactive garden page                                       
        layout.show(cards, "garden");
        setTitle("EZ Notes - Garden");

        // Load saved purchases to the garden page
        for(int i = 0; i < PurchaseTracker.stats.size(); i++)
        {
            int itemID = i + 1;

            if(PurchaseTracker.stats.get(i).equals("true") || PurchaseTracker.stats.get(i).equals("false"))
            {
                boolean isPurchased = Boolean.parseBoolean(PurchaseTracker.stats.get(i));

                // Found stat is a boolean (stands for a single-time purchase)
                switch(itemID)
                {
                    // List of all boolean values in the user save file
                    case 2:
                        // Check if Bushes have been purchased
                        if(isPurchased)
                        {
                            jLabel31.setVisible(true);
                            jButton23.setVisible(true);
                            jButton22.setEnabled(false);
                            jButton22.setVisible(false);
                        }

                        break;
                    case 4:
                        // Check if Roses have been purchased
                        if(isPurchased)
                        {
                            jLabel34.setVisible(true);
                            jButton27.setEnabled(false);
                            jButton27.setVisible(false);
                        }
                        
                        break;
                    case 5:
                        // Check if Vegetable Plot has been purchased
                        if(isPurchased)
                        {
                            jLabel35.setVisible(true);
                            jButton31.setVisible(true);
                            jButton28.setEnabled(false);
                            jButton28.setVisible(false);
                        }
                        
                        break;
                    case 7:
                        // Check if Fruit Plot has been purchased
                        if(isPurchased)
                        {
                            jLabel33.setVisible(true);
                            jButton30.setVisible(true);
                            jButton29.setEnabled(false);
                            jButton29.setVisible(false);
                        }
                        
                        break;
                    case 9:
                        // Check if Treehouse has been built
                        if(isPurchased)
                        {
                            jLabel44.setVisible(true);
                            jButton32.setEnabled(false);
                            jButton32.setVisible(false);
                        }
                        
                        break;
                    case 10:
                        // Check if Greenhouse has been built
                        if(isPurchased)
                        {
                            jLabel45.setVisible(true);
                            jButton33.setEnabled(false);
                            jButton33.setVisible(false);
                        }
                        
                        break;
                }
            }
            else
            {
                int level = Integer.parseInt(PurchaseTracker.stats.get(i));

                // Found stat is an int (stands for an upgradable item)
                switch(itemID)
                {
                    // List of all integer values in the user save file
                    case 1:
                        // Check if Tree has been upgraded
                        switch(level)
                        {
                            case 1:
                                // Tree is at level 2
                                jButton18.setText("Upgrade Tree to Level 3 (1000 credits)");
                                jLabel38.setIcon(new javax.swing.ImageIcon("images/lvl2_tree.png"));
                                
                                break;
                            case 2:
                                // Tree is at level 3
                                jButton18.setText("Upgrade Tree to Level 4 (2500 credits)");
                                jLabel38.setIcon(new javax.swing.ImageIcon("images/lvl3_tree.png"));
                
                                break;
                            case 3:
                                // Tree is at level 4
                                jButton18.setText("Upgrade Tree to Level 5 (5000 credits)");
                                jLabel38.setIcon(new javax.swing.ImageIcon("images/lvl4_tree.png"));

                                break;
                            case 4:
                                // Tree is at level 5
                                jLabel38.setIcon(new javax.swing.ImageIcon("images/lvl5_tree.png"));
                                jButton18.setEnabled(false);
                                jButton18.setVisible(false);
                
                                break;
                        }

                        break;
                    case 3:
                        // Check if Bushes have been upgraded
                        switch(level)
                        {
                            case 1:
                                // Bushes are at level 2
                                jButton23.setText("Upgrade Bushes to Level 3 (850 credits)");
                                jLabel31.setIcon(new javax.swing.ImageIcon("images/lvl2_bushes.png"));

                                break;
                            case 2:
                                // Bushes are at level 3
                                jButton23.setText("Upgrade Tree to Level 4 (1200 credits)");
                                jLabel31.setIcon(new javax.swing.ImageIcon("images/lvl3_bushes.png"));
                
                                break;
                            case 3:
                                // Bushes are at level 4
                                jButton23.setText("Upgrade Tree to Level 5 (1550 credits)");
                                jLabel31.setIcon(new javax.swing.ImageIcon("images/lvl4_bushes.png"));
                
                                break;
                            case 4:
                                // Bushes are at level 5
                                jLabel31.setIcon(new javax.swing.ImageIcon("images/lvl5_bushes.png"));
                                jButton23.setEnabled(false);
                                jButton23.setVisible(false);
                
                                break;
                        }

                        break;
                    case 6:
                        // Check if Vegetable Plants have been purchased
                        switch(level)
                        {
                            case 1:
                                // First Vegetable Plant has already been purchased
                                jButton31.setText("Buy Vegetables (1500 credits)");
                                jLabel41.setVisible(true);
                
                                break;
                            case 2:
                                // Second Vegetable Plant has already been purchased
                                jButton31.setText("Buy Vegetables (2500 credits)");
                                jLabel42.setVisible(true);

                                break;
                            case 3:
                                // Third Vegetable Plant has already been purchased
                                jLabel43.setVisible(true);
                                jButton31.setEnabled(false);
                                jButton31.setVisible(false);

                                break;
                        }

                        break;
                    case 8:
                        // Check if Fruit Plants have been purchased
                        switch(level)
                        {
                            case 1:
                                // First Fruit Plant has already been purchased
                                jButton30.setText("Buy Fruits (2500 credits)");
                                jLabel36.setVisible(true);
                
                                break;
                            case 2:
                                // Second Fruit Plant has already been purchased
                                jButton30.setText("Buy Fruits (4000 credits)");
                                jLabel37.setVisible(true);
                
                                break;
                            case 3:
                                // Third Fruit Plant has already been purchased
                                jButton30.setText("Buy Fruits (6000 credits)");
                                jLabel39.setVisible(true);
                
                                break;
                            case 4:
                                // Fourth Fruit Plant has already been purchased
                                jLabel40.setVisible(true);
                                jButton30.setEnabled(false);
                                jButton30.setVisible(false);
                
                                break;
                        }

                        break;
                }
            }
        }
    }                                        

    // "Add Notebook..." button on Home page
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        // Refresh components
        jLabel30.setText("(directory name)");
        jTextField14.setText("");

        // Update textfield on "Add Notebook..." popup
        fileHandler.updateName(addingNotebook, jTextField14, jLabel30, 2);

        // Send "addingNotebook" JDialog popup to name the new folder
        addingNotebook.setVisible(true);
        addNotebookDialog.setVisible(true);
    }                                       

    // "Add Page..." button on Home page
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) throws IOException { 
        // Refresh components
        jLabel27.setText("(file name).txt");
        jTextField13.setText("");

        // Update textfield on "Add Page..." popup
        fileHandler.updateName(addingPage, jTextField13, jLabel27, 1);

        // Send "addingPage" JDialog popup to name the new folder
        addingPage.setVisible(true);
        addPageDialog.setVisible(true);
    }                                        

    // "< Log out" button on Home page
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // Reset current user variable
        FileHandler.currentUser = null;

        // Go to login page                                       
        layout.show(cards, "login");
        setTitle("EZ Notes - Login");
    } 

    // "Refresh" button on Home page
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {
        // Refresh the JTree by closing all expanded nodes                                         
        ((DefaultTreeModel)jTree1.getModel()).reload();
    }
    
    // "Cite work..." button on Notes Writer page
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {  
        // Send citation generator popup 
        citations.setVisible(true);
        citGenerator.setVisible(true);
    }                                         

    // "< Exit" button on Notes Writer page
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {    
        // Reset the open file and active mode
        FileHandler.currentFile = null;
        FileHandler.currentMode = "Standard Mode";
        
        // Go to home page                                       
        layout.show(cards, "home");
        setTitle("EZ Notes - Home");
    }                                         

    // "Save" button on Notes Writer page
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) throws IOException {   
        // Save the page to its corresponding text document                                       
        fileHandler.savePage();

        // Send success pop-up
        JOptionPane.showMessageDialog(card4, FileHandler.currentFile.getName() + " has been saved!",
        "File Saved", JOptionPane.INFORMATION_MESSAGE);
    }

    // "Delete..." button on Home page
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {
        // If an item is selected, ask if the 
        if(FileHandler.currentFile != null)
        {
            // Send deletion confirmation popup 
            int deleteItem = JOptionPane.showConfirmDialog(card3, "Are you sure you want to delete this page:\n" + FileHandler.currentFile.getName() + " ?", 
            "Delete a Page", JOptionPane.YES_NO_OPTION);

            if(deleteItem == 0)
            {
                DefaultTreeModel treeModel = new DefaultTreeModel((DefaultMutableTreeNode)jTree1.getModel().getRoot());
                treeModel.removeNodeFromParent((DefaultMutableTreeNode)jTree1.getLastSelectedPathComponent());
                this.jTree1.setModel(treeModel);

                FileHandler.currentFile.delete();
                jTree1.clearSelection();
                
                ((DefaultTreeModel)jTree1.getModel()).reload();
            }

            FileHandler.currentFile = null;
        }
        else
        {
            // Send error popup 
            JOptionPane.showMessageDialog(card3, "You have not selected a file to delete.\nPlease select a file.",
            "Error", JOptionPane.WARNING_MESSAGE);
        }
    }

    // Textfield on "Add Page..." popup
    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {
        // Placeholder to avoid StackOverflowError
    }

    // Textfield on "Add Notebook..." popup
    private void jTextField14ActionPerformed(java.awt.event.ActionEvent evt) {
        // Placeholder to avoid StackOverflowError
    }

    // "OK" button on "Add Page..." popup
    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {
        String pageName = jTextField13.getText();
        boolean isOpen = false;

        try{
            isOpen = fileHandler.isOpen(pageName);

            // Check if input field is empty
            if(pageName == null)
            {
                // Send error pop-up
                JOptionPane.showMessageDialog(card3, "You have not provided a name for this new page.\nPlease input a name.",
                "Error", JOptionPane.WARNING_MESSAGE);
            }
            else if(!(isOpen))
            {
                // Send error pop-up
                JOptionPane.showMessageDialog(card2, "Your inputted page name is already in use.\nPlease input another.",
                "Error", JOptionPane.WARNING_MESSAGE);
            }
            else
            {
                addPageDialog.setVisible(false);
                addingPage.setVisible(false);

                // Add the page to the account
                String addToPath = "userfiles/" + FileHandler.currentUser.getUsername(2) + "/";
                DefaultMutableTreeNode root = (DefaultMutableTreeNode)jTree1.getModel().getRoot();

                // Add the new directory to the root if no directory is selected
                if(jTree1.getLastSelectedPathComponent() != null) 
                {
                    root = (DefaultMutableTreeNode)jTree1.getLastSelectedPathComponent();

                    String addToDir = (String)root.getUserObject();
                    System.out.println("Adding to this dir: " + addToDir);
                    addToPath = FileHandler.findFile(addToDir, addToPath);
                }

                System.out.println("Adding to: " + addToPath);

                DefaultMutableTreeNode addPage = new DefaultMutableTreeNode(pageName + ".txt");
         
                DefaultTreeModel treeModel = new DefaultTreeModel((DefaultMutableTreeNode)jTree1.getModel().getRoot());
                treeModel.insertNodeInto(addPage, root, root.getChildCount());
                this.jTree1.setModel(treeModel);

                File newPage = new File(addToPath + "/" + pageName + ".txt");
                newPage.createNewFile();
                
                jTree1.clearSelection();

                ((DefaultTreeModel)jTree1.getModel()).reload();
            }
        }
        catch(IOException e){
            e.printStackTrace();
        }
    }

    // "OK" button on "Add Notebook..." popup
    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) throws IOException{
        String notebookName = jTextField14.getText();
        boolean isOpen = false;

        try{
            isOpen = fileHandler.isOpen(notebookName);

            // Check if input field is empty
            if(notebookName == null)
            {
                // Send error pop-up
                JOptionPane.showMessageDialog(card3, "You have not provided a name for this new notebook.\nPlease input a name.",
                "Error", JOptionPane.WARNING_MESSAGE);
            }
            else if(!(isOpen))
            {
                // Send error pop-up
                JOptionPane.showMessageDialog(card2, "Your inputted notebook name is already in use.\nPlease input another.",
                "Error", JOptionPane.WARNING_MESSAGE);
            }
            else
            {
                addNotebookDialog.setVisible(false);
                addingNotebook.setVisible(false);

                // Add the notebook to the acocunt
                String addToPath = "userfiles/" + FileHandler.currentUser.getUsername(2) + "/";
                DefaultMutableTreeNode root = (DefaultMutableTreeNode)jTree1.getModel().getRoot();

                // Add the new directory to the root if no directory is selected
                if(jTree1.getLastSelectedPathComponent() != null) 
                {
                    root = (DefaultMutableTreeNode)jTree1.getLastSelectedPathComponent();

                    String addToDir = (String)root.getUserObject();
                    System.out.println("Adding to this dir: " + addToDir);
                    addToPath = FileHandler.findFile(addToDir, addToPath);
                }

                System.out.println("Adding to: " + addToPath);

                DefaultMutableTreeNode addNotebook = new DefaultMutableTreeNode(notebookName);
                DefaultMutableTreeNode addPlaceHolder = new DefaultMutableTreeNode("Placeholder.txt");
         
                DefaultTreeModel treeModel = new DefaultTreeModel((DefaultMutableTreeNode)jTree1.getModel().getRoot());
                treeModel.insertNodeInto(addNotebook, root, root.getChildCount());
                treeModel.insertNodeInto(addPlaceHolder, addNotebook, addNotebook.getChildCount());
                this.jTree1.setModel(treeModel);

                File newNotebook = new File(addToPath + "/" + notebookName);
                newNotebook.mkdir();

                File placeHolder = new File(addToPath + "/" + notebookName + "/PlaceHolder.txt");
                placeHolder.createNewFile();
                
                jTree1.clearSelection();
        
                java.io.PrintWriter outFile = new java.io.PrintWriter(placeHolder);
                outFile.print("This is a placeholder document for the notebook: \n" + newNotebook.getName()
                        + "\nDelete this file if needed.");
                outFile.close();

                ((DefaultTreeModel)jTree1.getModel()).reload();
            }
        }
        catch(IOException e){
            e.printStackTrace();
        }
    }

    // "OK" button on citation generator
    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        //couldnt find the file for the fields again so just change the number to the right one
        //let me know if u want more structure then I'll format the output to print the the Text Field better
        String title = jTextField6.getText();
        String url = jTextField7.getText();
        String first = jTextField8.getText();
        String last = jTextField9.getText();
        String pubDate = jTextField10.getText();
        String pub = jTextField11.getText();
        String date = jTextField12.getText();

        String[] information = {title, url, first, last, pubDate, pub, date};
        String missedInformation = "";

        // Check for any empty textfields
        for(int i = 0; i < information.length; i++)
        {
            if(information[i].isEmpty())
            {
                switch(i)
                {
                    case 0:
                        // Title not inputted
                        missedInformation += "Title, ";
                        break;
                    case 1:
                        // URL not inputted
                        missedInformation += "URL, ";
                        break;
                    case 2:
                        // First Name not inputted
                        missedInformation += "First Name, ";
                        break;
                    case 3:
                        // Last Name not inputted
                        missedInformation += "Last Name, ";
                        break;
                    case 4:
                        // Publication Date not inputted
                        missedInformation += "Publication Date, ";
                        break;
                    case 5:
                        // Publisher not inputted
                        missedInformation += "Publisher, ";
                        break;
                    case 6:
                        // Access Date not inputted
                        missedInformation += "Access Date, ";
                        break;
                }
            }
        }

        if(missedInformation.length() > 0)
        {
            String trimmedInfo = missedInformation.substring(0, missedInformation.length() - 2);
            
            // Send error popup
            JOptionPane.showMessageDialog(citGenerator, "You have not provided the following information:\n" + trimmedInfo + "\nPlease input your citation information into these fields.",
            "Error", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            // Print the citation to the textarea
            String webCitation = last + ", " + first +". " + title + ", "+ pub +", "+ pubDate +", "+ url +", "+ date;
            jTextArea5.setText(webCitation);
        }
    } 

    // Mode selector on Notes Writer page
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        // Get selected mode in this combobox
        JComboBox thisBox = (JComboBox)evt.getSource();
        String mode = (String)thisBox.getSelectedItem();

        // Update current mode in the notes writer
        fileHandler.updateMode(mode);
    }

    // Text style selector on Notes Writer page
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {
        // Get selected style in this combobox
        JComboBox thisBox = (JComboBox)evt.getSource();
        String style = (String)thisBox.getSelectedItem();

        // Update the style setting for the notes writer
        switch(style)
        {
            case "Plain":
                // Set text to plain style
                fileHandler.updateStyle(Font.PLAIN);
                break;
            case "Bold":
                // Set text to bold style
                fileHandler.updateStyle(Font.BOLD);
                break;
            case "Italic":
                // Set text to italic style
                fileHandler.updateStyle(Font.ITALIC);
                break;
            case "Bold Italic":
                // Set text to bold italic style
                fileHandler.updateStyle(Font.BOLD + Font.ITALIC);
                break;
        }
    }

    // Text font selector on Notes Writer page
    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {
        // Get selected font in this combobox
        JComboBox thisBox = (JComboBox)evt.getSource();
        String font = (String)thisBox.getSelectedItem();

        // Update the font setting for the notes writer
        fileHandler.updateFont(font);
    }

    // Text size selector on Notes Writer page
    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {
        // Get selected size in this combobox
        JComboBox thisBox = (JComboBox)evt.getSource();
        String size = (String)thisBox.getSelectedItem();

        // Update the size setting for the notes writer
        fileHandler.updateSize(Integer.parseInt(size));
    }

    // Text size selector on Notes Writer page
    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {
        // Get selected color in this combobox
        JComboBox thisBox = (JComboBox)evt.getSource();
        String color = (String)thisBox.getSelectedItem();

        // Update the color setting for the notes writer
        switch(color)
        {
            case "Default":
                // Set text to black
                jTextArea3.setForeground(Color.BLACK);
                break;
            case "Red":
                // Set text to red
                jTextArea3.setForeground(Color.RED);
                break;
            case "Blue":
                // Set text to blue
                jTextArea3.setForeground(Color.BLUE);
                break;
            case "Yellow":
                // Set text to yellow
                jTextArea3.setForeground(Color.YELLOW);
                break;
            case "Green":
                // Set text to green
                jTextArea3.setForeground(Color.GREEN);
                break;
            case "Orange":
                // Set text to orange
                jTextArea3.setForeground(Color.ORANGE);
                break;
            case "Magenta":
                // Set text to magenta
                jTextArea3.setForeground(Color.MAGENTA);
                break;
        }
    }

    // "< Exit" button on Garden page
    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {    
        // Go to home page                                       
        layout.show(cards, "home");
        setTitle("EZ Notes - Home");
    }     

    // "Tree" upgrader on Garden page
    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        // Check the upgrade level of the Tree
        String treeUpgrader = purchaseTracker.checkStat(1);
        int level = Integer.parseInt(treeUpgrader);
        int credits = FileHandler.currentUser.getCredits(1);

        int price;
        
        switch(level)
        {
            case 0:
                // Upgrading Tree to level 2
                price = 500;
                if(credits >= price)
                {
                    purchaseTracker.purchase(1, price);
                    jButton18.setText("Upgrade Tree to Level 3 (1000 credits)");
                    jLabel38.setIcon(new javax.swing.ImageIcon("images/lvl2_tree.png"));
                }
                else
                {
                    // Send insufficient credits pop-up
                    JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
                }

                break;
            case 1:
                // Upgrading Tree to level 3
                price = 1000;
                if(credits >= price)
                {
                    purchaseTracker.purchase(1, price);
                    jButton18.setText("Upgrade Tree to Level 4 (2500 credits)");
                    jLabel38.setIcon(new javax.swing.ImageIcon("images/lvl3_tree.png"));
                }
                else
                {
                    // Send insufficient credits pop-up
                    JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
                }

                break;
            case 2:
                // Upgrading Tree to level 4
                price = 2500;
                if(credits >= price)
                {
                    purchaseTracker.purchase(1, price);
                    jButton18.setText("Upgrade Tree to Level 5 (5000 credits)");
                    jLabel38.setIcon(new javax.swing.ImageIcon("images/lvl4_tree.png"));
                }
                else
                {
                    // Send insufficient credits pop-up
                    JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
                }

                break;
            case 3:
                // Upgrading Tree to level 5
                price = 5000;
                if(credits >= price)
                {
                    purchaseTracker.purchase(1, price);
                    jLabel38.setIcon(new javax.swing.ImageIcon("images/lvl5_tree.png"));
                    jButton18.setEnabled(false);
                    jButton18.setVisible(false);
                }
                else
                {
                    // Send insufficient credits pop-up
                    JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
                }

                break;
        }
    }                                         

    // "Buy Bushes" button on Garden page
    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) throws IOException{                                          
        // Check if the Bushes have been purchased
        int credits = FileHandler.currentUser.getCredits(1);

        // This button will not be visible if already purchased
        int price = 100;
        if(credits >= price)
        {
            purchaseTracker.purchase(2, price);
            jLabel31.setVisible(true);
            jButton23.setVisible(true);
            jButton22.setEnabled(false);
            jButton22.setVisible(false);
        }
        else
        {
            // Send insufficient credits pop-up
            JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
        }
    }                                         

    // "Bushes" upgrader on Garden page 
    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) throws IOException{                                          
        // Check the upgrade level of the Bushes
        String bushesUpgrader = purchaseTracker.checkStat(3);
        int level = Integer.parseInt(bushesUpgrader);
        int credits = FileHandler.currentUser.getCredits(1);

        int price;
        
        switch(level)
        {
            case 0:
                // Upgrading Bushes to level 
                price = 500;
                if(credits >= price)
                {
                    purchaseTracker.purchase(3, price);
                    jButton23.setText("Upgrade Bushes to Level 3 (850 credits)");
                    jLabel31.setIcon(new javax.swing.ImageIcon("images/lvl2_bushes.png"));
                }
                else
                {
                    // Send insufficient credits pop-up
                    JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
                }

                break;
            case 1:
                // Upgrading Bushes to level 3
                price = 850;
                if(credits >= price)
                {
                    purchaseTracker.purchase(3, price);
                    jButton23.setText("Upgrade Tree to Level 4 (1200 credits)");
                    jLabel31.setIcon(new javax.swing.ImageIcon("images/lvl3_bushes.png"));
                }
                else
                {
                    // Send insufficient credits pop-up
                    JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
                }

                break;
            case 2:
                // Upgrading Bushes to level 4
                price = 1200;
                if(credits >= price)
                {
                    purchaseTracker.purchase(3, price);
                    jButton23.setText("Upgrade Tree to Level 5 (1550 credits)");
                    jLabel31.setIcon(new javax.swing.ImageIcon("images/lvl4_bushes.png"));
                }
                else
                {
                    // Send insufficient credits pop-up
                    JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
                }

                break;
            case 3:
                // Upgrading Bushes to level 5
                price = 1550;
                if(credits >= price)
                {
                    purchaseTracker.purchase(3, price);
                    jLabel31.setIcon(new javax.swing.ImageIcon("images/lvl5_bushes.png"));
                    jButton23.setEnabled(false);
                    jButton23.setVisible(false);
                }
                else
                {
                    // Send insufficient credits pop-up
                    JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
                }

                break;
        }
    }                                         

    // "Buy Roses" button on Garden Page
    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) throws IOException{                                          
        // Check if the Roses have been purchased
        int credits = FileHandler.currentUser.getCredits(1);

        // This button will not be visible if already purchased
        int price = 1000;
        if(credits >= price)
        {
            purchaseTracker.purchase(4, price);
            jLabel34.setVisible(true);
            jButton27.setEnabled(false);
            jButton27.setVisible(false);
        }
        else
        {
            // Send insufficient credits pop-up
            JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
        }
    }                                         

    // "Buy Vegetable Plot" button on Garden page
    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) throws IOException{                                          
        // Check if the Vegetable Plot has been purchased
        int credits = FileHandler.currentUser.getCredits(1);

        // This button will not be visible if already purchased
        int price = 2000;
        if(credits >= price)
        {
            purchaseTracker.purchase(5, price);
            jLabel35.setVisible(true);
            jButton31.setVisible(true);
            jButton28.setEnabled(false);
            jButton28.setVisible(false);
        }
        else
        {
            // Send insufficient credits pop-up
            JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
        }
    }                                         

    // "Buy Fruit Plot" button on Garden page
    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) throws IOException{                                          
        // Check if the Fruit Plot has been purchased
        int credits = FileHandler.currentUser.getCredits(1);

        // This button will not be visible if already purchased
        int price = 3000;
        if(credits >= price)
        {
            purchaseTracker.purchase(7, price);
            jLabel33.setVisible(true);
            jButton30.setVisible(true);
            jButton29.setEnabled(false);
            jButton29.setVisible(false);
        }
        else
        {
            // Send insufficient credits pop-up
            JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
        }
    }                                         

    // "Buy Fruits" button on Garden page
    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) throws IOException{                                          
        // Check the number of purchase Fruits
        String fruitsCounter = purchaseTracker.checkStat(8);
        int count = Integer.parseInt(fruitsCounter);
        int credits = FileHandler.currentUser.getCredits(1);

        int price;
        
        switch(count)
        {
            case 0:
                // Buying first Fruits plant
                price = 1500;
                if(credits >= price)
                {
                    purchaseTracker.purchase(8, price);
                    jButton30.setText("Buy Fruits (2500 credits)");
                    jLabel36.setVisible(true);
                }
                else
                {
                    // Send insufficient credits pop-up
                    JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
                }

                break;
            case 1:
                // Upgrading Bushes to level 3
                price = 2500;
                if(credits >= price)
                {
                    purchaseTracker.purchase(8, price);
                    jButton30.setText("Buy Fruits (4000 credits)");
                    jLabel37.setVisible(true);
                }
                else
                {
                    // Send insufficient credits pop-up
                    JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
                }

                break;
            case 2:
                // Upgrading Bushes to level 4
                price = 4000;
                if(credits >= price)
                {
                    purchaseTracker.purchase(8, price);
                    jButton30.setText("Buy Fruits (6000 credits)");
                    jLabel39.setVisible(true);
                }
                else
                {
                    // Send insufficient credits pop-up
                    JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
                }

                break;
            case 3:
                // Upgrading Bushes to level 5
                price = 6000;
                if(credits >= price)
                {
                    purchaseTracker.purchase(8, price);
                    jLabel40.setVisible(true);
                    jButton30.setEnabled(false);
                    jButton30.setVisible(false);
                }
                else
                {
                    // Send insufficient credits pop-up
                    JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
                }

                break;
        }
    }                                         

    // "Buy Vegetables" button on Garden page
    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) throws IOException{                                          
        // Check the number of purchase Vegetables
        String veggiesCounter = purchaseTracker.checkStat(6);
        int count = Integer.parseInt(veggiesCounter);
        int credits = FileHandler.currentUser.getCredits(1);

        int price;
        
        switch(count)
        {
            case 0:
                // Buying first Vegetable plant
                price = 1000;
                if(credits >= price)
                {
                    purchaseTracker.purchase(6, price);
                    jButton31.setText("Buy Vegetables (1500 credits)");
                    jLabel41.setVisible(true);
                }
                else
                {
                    // Send insufficient credits pop-up
                    JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
                }

                break;
            case 1:
                // Upgrading Bushes to level 3
                price = 1500;
                if(credits >= price)
                {
                    purchaseTracker.purchase(6, price);
                    jButton31.setText("Buy Vegetables (2500 credits)");
                    jLabel42.setVisible(true);
                }
                else
                {
                    // Send insufficient credits pop-up
                    JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
                }

                break;
            case 2:
                // Upgrading Bushes to level 4
                price = 2500;
                if(credits >= price)
                {
                    purchaseTracker.purchase(6, price);
                    jLabel43.setVisible(true);
                    jButton31.setEnabled(false);
                    jButton31.setVisible(false);
                }
                else
                {
                    // Send insufficient credits pop-up
                    JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
                }

                break;
        }
    }                                         

    // "Build Treehouse" button on Garden page
    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) throws IOException{                                          
        // Check if the user has enough credits to purchase the Treehouse
        int credits = FileHandler.currentUser.getCredits(1);

        // This button will not be visible if already purchased
        int price = 5000;
        if(credits >= price)
        {
            purchaseTracker.purchase(9, price);
            jLabel44.setVisible(true);
            jButton32.setEnabled(false);
            jButton32.setVisible(false);
        }
        else
        {
            // Send insufficient credits pop-up
            JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
        }
    }                                         

    // "Build Greenhouse" button on Garden page
    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) throws IOException{                                          
        // Check if the user has enough credits to purchase the Greenhouse
        int credits = FileHandler.currentUser.getCredits(1);

        // This button will not be visible if already purchased
        int price = 10000;
        if(credits >= price)
        {
            purchaseTracker.purchase(10, price);
            jLabel45.setVisible(true);
            jButton33.setEnabled(false);
            jButton33.setVisible(false);
        }
        else
        {
            // Send insufficient credits pop-up
            JOptionPane.showMessageDialog(card5, "You do not have enough credits to purchase this item.\n" + price + " are needed; you have " + credits + ".", "Insufficient Credits", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify       
    private javax.swing.JPanel addNotebookDialog;
    private javax.swing.JPanel addPageDialog;
    private javax.swing.JDialog addingNotebook;
    private javax.swing.JDialog addingPage;
    private javax.swing.JPanel bushes;
    private javax.swing.JPanel bushesBuyer;
    private javax.swing.JPanel bushesUpgrader;
    private javax.swing.JPanel card1;
    private javax.swing.JPanel card2;
    private javax.swing.JPanel card3;
    private javax.swing.JPanel card4;
    private javax.swing.JPanel card5;
    private javax.swing.JPanel cards;
    private javax.swing.JDialog citGenerator;
    private javax.swing.JPanel citations;
    private javax.swing.JPanel controls;
    private javax.swing.JPanel credits;
    private javax.swing.JPanel field;
    private javax.swing.JPanel fruits;
    private javax.swing.JPanel fruitsBuyer;
    private javax.swing.JPanel fruitsPlot;
    private javax.swing.JPanel fruitsPlotBuyer;
    private javax.swing.JPanel greenhouse;
    private javax.swing.JPanel greenhouseBuyer;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTree jTree1;
    private javax.swing.JPanel login;
    private javax.swing.JPanel mainPanel1;
    private javax.swing.JPanel mainPanel2;
    private javax.swing.JPanel mainPanel3;
    private javax.swing.JPanel mainPanel4;
    private javax.swing.JLayeredPane mainPanel5;
    private javax.swing.JPanel register;
    private javax.swing.JPanel roses;
    private javax.swing.JPanel rosesBuyer;
    private javax.swing.JPanel tree;
    private javax.swing.JPanel treeUpgrader;
    private javax.swing.JPanel treehouse;
    private javax.swing.JPanel treehouseBuyer;
    private javax.swing.JPanel vegetables;
    private javax.swing.JPanel vegetablesBuyer;
    private javax.swing.JPanel vegetablesPlot;
    private javax.swing.JPanel vegetablesPlotBuyer;
    // End of variables declaration              
}
